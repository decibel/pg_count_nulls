\set ECHO none

    # Subtest: _null_count_test.test__definition()
    ok 1 - Function schema_to_load_count_nulls.null_count(anyarray) should return integer
    ok 2 - Function schema_to_load_count_nulls.null_count(anyarray) should not be strict
    ok 3 - Function schema_to_load_count_nulls.null_count(anyarray) should be IMMUTABLE
    ok 4 - Function schema_to_load_count_nulls.null_count(json) should return integer
    ok 5 - Function schema_to_load_count_nulls.null_count(json) should not be strict
    ok 6 - Function schema_to_load_count_nulls.null_count(json) should be IMMUTABLE
    ok 7 - Function schema_to_load_count_nulls.null_count(jsonb) should return integer
    ok 8 - Function schema_to_load_count_nulls.null_count(jsonb) should not be strict
    ok 9 - Function schema_to_load_count_nulls.null_count(jsonb) should be IMMUTABLE
    ok 10 - Function schema_to_load_count_nulls.not_null_count(anyarray) should return integer
    ok 11 - Function schema_to_load_count_nulls.not_null_count(anyarray) should not be strict
    ok 12 - Function schema_to_load_count_nulls.not_null_count(anyarray) should be IMMUTABLE
    ok 13 - Function schema_to_load_count_nulls.not_null_count(json) should return integer
    ok 14 - Function schema_to_load_count_nulls.not_null_count(json) should not be strict
    ok 15 - Function schema_to_load_count_nulls.not_null_count(json) should be IMMUTABLE
    ok 16 - Function schema_to_load_count_nulls.not_null_count(jsonb) should return integer
    ok 17 - Function schema_to_load_count_nulls.not_null_count(jsonb) should not be strict
    ok 18 - Function schema_to_load_count_nulls.not_null_count(jsonb) should be IMMUTABLE
    ok 19 - Function schema_to_load_count_nulls.null_count_trigger() should return trigger
    ok 20 - Function schema_to_load_count_nulls.null_count_trigger() should not be strict
    ok 21 - Function schema_to_load_count_nulls.null_count_trigger() should be IMMUTABLE
    ok 22 - Function schema_to_load_count_nulls.not_null_count_trigger() should return trigger
    ok 23 - Function schema_to_load_count_nulls.not_null_count_trigger() should not be strict
    ok 24 - Function schema_to_load_count_nulls.not_null_count_trigger() should be IMMUTABLE
    1..24
ok 1 - _null_count_test.test__definition
    # Subtest: _null_count_test.test__functionality()
    ok 1 - Test schema_to_load_count_nulls.null_count(a, b, c)
    ok 2 - Test schema_to_load_count_nulls.null_count(json)
    ok 3 - Test schema_to_load_count_nulls.null_count(jsonb)
    ok 4 - CREATE TRIGGER "test trigger" BEFORE INSERT ON test_data FOR EACH ROW EXECUTE PROCEDURE schema_to_load_count_nulls.not_null_count_trigger( NULL )
    ok 5 - Test schema_to_load_count_nulls.not_null_count_trigger( NULL )
    ok 6 - DROP TRIGGER "test trigger"
    ok 7 - CREATE TRIGGER "test trigger" BEFORE INSERT ON test_data FOR EACH ROW EXECUTE PROCEDURE schema_to_load_count_nulls.not_null_count_trigger(  )
    ok 8 - Test schema_to_load_count_nulls.not_null_count_trigger(  )
    ok 9 - DROP TRIGGER "test trigger"
    ok 10 - CREATE TRIGGER "test trigger" BEFORE INSERT ON test_data FOR EACH ROW EXECUTE PROCEDURE schema_to_load_count_nulls.null_count_trigger( NULL )
    ok 11 - Test schema_to_load_count_nulls.null_count_trigger( NULL )
    ok 12 - DROP TRIGGER "test trigger"
    ok 13 - CREATE TRIGGER "test trigger" BEFORE INSERT ON test_data FOR EACH ROW EXECUTE PROCEDURE schema_to_load_count_nulls.null_count_trigger(  )
    ok 14 - Test schema_to_load_count_nulls.null_count_trigger(  )
    ok 15 - DROP TRIGGER "test trigger"
    ok 16 - CREATE TRIGGER "null_BEFORE_error_message" BEFORE INSERT ON test_data FOR EACH ROW EXECUTE PROCEDURE schema_to_load_count_nulls.null_count_trigger(1, 'error_message')
    ok 17 - Test "null_BEFORE_error_message"
    ok 18 - DROP TRIGGER "null_BEFORE_error_message"
    ok 19 - CREATE TRIGGER "null_AFTER_error_message" AFTER INSERT ON test_data FOR EACH ROW EXECUTE PROCEDURE schema_to_load_count_nulls.null_count_trigger(1, 'error_message')
    ok 20 - Test "null_AFTER_error_message"
    ok 21 - DROP TRIGGER "null_AFTER_error_message"
    ok 22 - CREATE TRIGGER "not_null_BEFORE_error_message" BEFORE INSERT ON test_data FOR EACH ROW EXECUTE PROCEDURE schema_to_load_count_nulls.not_null_count_trigger(1, 'error_message')
    ok 23 - Test "not_null_BEFORE_error_message"
    ok 24 - DROP TRIGGER "not_null_BEFORE_error_message"
    ok 25 - CREATE TRIGGER "not_null_AFTER_error_message" AFTER INSERT ON test_data FOR EACH ROW EXECUTE PROCEDURE schema_to_load_count_nulls.not_null_count_trigger(1, 'error_message')
    ok 26 - Test "not_null_AFTER_error_message"
    ok 27 - DROP TRIGGER "not_null_AFTER_error_message"
    ok 28 - CREATE TRIGGER "null_BEFORE_" BEFORE INSERT ON test_data FOR EACH ROW EXECUTE PROCEDURE schema_to_load_count_nulls.null_count_trigger(1, NULL)
    ok 29 - Test "null_BEFORE_"
    ok 30 - DROP TRIGGER "null_BEFORE_"
    ok 31 - CREATE TRIGGER "null_AFTER_" AFTER INSERT ON test_data FOR EACH ROW EXECUTE PROCEDURE schema_to_load_count_nulls.null_count_trigger(1, NULL)
    ok 32 - Test "null_AFTER_"
    ok 33 - DROP TRIGGER "null_AFTER_"
    ok 34 - CREATE TRIGGER "not_null_BEFORE_" BEFORE INSERT ON test_data FOR EACH ROW EXECUTE PROCEDURE schema_to_load_count_nulls.not_null_count_trigger(1, NULL)
    ok 35 - Test "not_null_BEFORE_"
    ok 36 - DROP TRIGGER "not_null_BEFORE_"
    ok 37 - CREATE TRIGGER "not_null_AFTER_" AFTER INSERT ON test_data FOR EACH ROW EXECUTE PROCEDURE schema_to_load_count_nulls.not_null_count_trigger(1, NULL)
    ok 38 - Test "not_null_AFTER_"
    ok 39 - DROP TRIGGER "not_null_AFTER_"
    1..39
ok 2 - _null_count_test.test__functionality
ok 3
ok 4
1..4
